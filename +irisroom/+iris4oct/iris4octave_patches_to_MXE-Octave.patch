# HG changeset patch
# User John Donoghue
# Date 1406665233 14400
#      Tue Jul 29 16:20:33 2014 -0400
# Node ID a81cdbc000f2d160f22d34c8c9f4b77612bd0cbe
# Parent  95454fa2df8b918e5109b76a1d4d44105fb854e8
ghostscript: update to 9.14

* src/ghostscript.mk: update to 9.14

* src/ghostscript-mingw-i686-makefile: update makefile for 9.14.

diff -r 95454fa2df8b -r a81cdbc000f2 src/ghostscript-mingw-i686-makefile
--- a/src/ghostscript-mingw-i686-makefile	Mon Jul 28 15:41:31 2014 -0400
+++ b/src/ghostscript-mingw-i686-makefile	Tue Jul 29 16:20:33 2014 -0400
@@ -1,4 +1,4 @@
-# Copyright (C) 2001-2012 Artifex Software, Inc.
+# Copyright (C) 2001-2014 Artifex Software, Inc.
 # All Rights Reserved.
 #
 # This software is provided AS-IS with no warranty, either express or
@@ -25,8 +25,11 @@
 
 BINDIR=./$(BUILDDIRPREFIX)bin
 GLSRCDIR=./base
+DEVSRCDIR=./devices
 GLGENDIR=./$(BUILDDIRPREFIX)obj
 GLOBJDIR=./$(BUILDDIRPREFIX)obj
+DEVGENDIR=./$(BUILDDIRPREFIX)obj
+DEVOBJDIR=./$(BUILDDIRPREFIX)obj
 AUXDIR=$(GLGENDIR)/aux_
 PSSRCDIR=./psi
 PSLIBDIR=./lib
@@ -77,17 +80,6 @@
 exdir=$(gsdatadir)/examples
 GS_DOCDIR=$(docdir)
 
-# Define install location for 'cups' device/filter support
-CUPSCFLAGS=
-CUPSLIBS=
-CUPSLIBDIRS=
-CUPSSERVERBIN=
-CUPSSERVERROOT=
-CUPSDATA=
-CUPSPDFTORASTER=0
-
-CUPSINSTTARGET=
-
 # Choose whether to compile the .ps initialization files into the executable.
 # See gs.mak for details.
 
@@ -150,11 +142,14 @@
 # -DHAVE_SSE2
 #       use sse2 intrinsics
 
-CAPOPT=  -DHAVE_FILE64     -DHAVE_SETLOCALE   -DHAVE_BSWAP32  -DHAVE_STRERROR
+CAPOPT=  -DHAVE_FILE64 -DHAVE_SETLOCALE -DHAVE_BSWAP32  -DHAVE_STRERROR
 
 # Define the name of the executable file.
 
 GS=gs.exe
+GS_SO_BASE=gs
+XE=.exe
+XEAUX=.exe
 
 # Define the directories for debugging and profiling binaries, relative to
 # the standard binaries.
@@ -219,6 +214,7 @@
 # libtiff
 SHARE_LIBTIFF=1
 TIFFSRCDIR=
+TIFFCONFDIR=
 TIFFPLATFORM=unix
 TIFFCONFIG_SUFFIX=
 LIBTIFF_NAME=tiff
@@ -289,6 +285,14 @@
 IJSSRCDIR=src
 IJSEXECTYPE=unix
 
+# Define install location for 'cups' device/filter support
+CUPSCFLAGS=
+CUPSLIBS=
+CUPSLIBDIRS=
+CUPSSERVERBIN=
+CUPSSERVERROOT=
+CUPSDATA=
+CUPSPDFTORASTER=0
 
 SHARE_LCUPS=1
 LCUPS_NAME=cups
@@ -298,10 +302,14 @@
 
 SHARE_LCUPSI=1
 LCUPSI_NAME=cupsimage
-LCUPSISRCDIR=cups
+LCUPSISRCDIR=./cups
 CUPS_CC=$(CC)
 
 
+TRIOSRCDIR=trio
+AC_TRIO_CFLAGS=    
+TRIO_CFLAGS=$(TRIO_XCFLAGS) $(AC_TRIO_CFLAGS)
+
 # Define how to build the library archives.  (These are not used in any
 # standard configuration.)
 
@@ -323,7 +331,7 @@
 CCAUXLD=$(CCAUX)
 
 # Define the default gcc flags.
-GCFLAGS=  -Wall -Wstrict-prototypes -Wundef -Wmissing-declarations -Wmissing-prototypes -Wwrite-strings -Wno-strict-aliasing -Wdeclaration-after-statement -fno-builtin -fno-common -DHAVE_STDINT_H=1 -DHAVE_DIRENT_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_INTTYPES_H=1 -DGX_COLOR_INDEX_TYPE="unsigned long long"  -DNOCONTRIB -DUSE_LIBICONV_GNU
+GCFLAGS=-Wall -Wstrict-prototypes -Wundef -Wmissing-declarations -Wmissing-prototypes -Wwrite-strings -Wno-strict-aliasing -Wdeclaration-after-statement -fno-builtin -fno-common -DHAVE_STDINT_H=1 -DHAVE_DIRENT_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_INTTYPES_H=1 -DGX_COLOR_INDEX_TYPE="unsigned long long" -DGS_NO_UTF8=1  -DNOCONTRIB -DUSE_LIBICONV_GNU
 
 # Define the added flags for standard, debugging, profiling 
 # and shared object builds.
@@ -356,7 +364,7 @@
 DBUS_LIBS=
 
 # defines from autoconf; note that we don't use these at present.
-ACDEFS=-DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DHAVE_DIRENT_H=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ERRNO_H=1 -DHAVE_FCNTL_H=1 -DHAVE_LIMITS_H=1 -DHAVE_MALLOC_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_PARAM_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DIRENT_H=1 -DHAVE_INTTYPES_H=1 -DTIME_WITH_SYS_TIME=1 -DSIZEOF_UNSIGNED_LONG_INT=4 -DSIZEOF_UNSIGNED_LONG_LONG=8 -DHAVE_LIBM=1 -DUSE_LIBICONV_GNU=1 -DX_DISPLAY_MISSING=1 -DHAVE_FOPEN64=1 -DHAVE_SETLOCALE=1 -DHAVE_STRERROR=1 -Dvfork=fork -DHAVE_STDLIB_H=1 -DHAVE_MALLOC=1 -DRETSIGTYPE=void -DHAVE_VPRINTF=1 -DHAVE_DUP2=1 -DHAVE_FLOOR=1 -DHAVE_GETTIMEOFDAY=1 -DHAVE_MEMCHR=1 -DHAVE_MEMMOVE=1 -DHAVE_MEMSET=1 -DHAVE_MKDIR=1 -DHAVE_MODF=1 -DHAVE_POW=1 -DHAVE_PUTENV=1 -DHAVE_RINT=1 -DHAVE_SQRT=1 -DHAVE_STRCHR=1 -DHAVE_STRRCHR=1 -DHAVE_STRSPN=1 -DHAVE_STRSTR=1
+ACDEFS=-DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DHAVE_DIRENT_H=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ERRNO_H=1 -DHAVE_FCNTL_H=1 -DHAVE_LIMITS_H=1 -DHAVE_MALLOC_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_PARAM_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DIRENT_H=1 -DHAVE_INTTYPES_H=1 -DTIME_WITH_SYS_TIME=1 -DSIZEOF_UNSIGNED_LONG_INT=4 -DSIZEOF_UNSIGNED_LONG_LONG=8 -DHAVE_LIBM=1 -DUSE_LIBICONV_GNU=1 -DHAVE_LCMS2_H=1 -DX_DISPLAY_MISSING=1 -DHAVE_FOPEN64=1 -DHAVE_FSEEKO=1 -DHAVE_SETLOCALE=1 -DHAVE_STRERROR=1 -Dvfork=fork -DHAVE_STDLIB_H=1 -DHAVE_MALLOC=1 -DRETSIGTYPE=void -DHAVE_VPRINTF=1 -DHAVE_DUP2=1 -DHAVE_FLOOR=1 -DHAVE_GETTIMEOFDAY=1 -DHAVE_MEMCHR=1 -DHAVE_MEMMOVE=1 -DHAVE_MEMSET=1 -DHAVE_MKDIR=1 -DHAVE_MODF=1 -DHAVE_POW=1 -DHAVE_PUTENV=1 -DHAVE_RINT=1 -DHAVE_SQRT=1 -DHAVE_STRCHR=1 -DHAVE_STRRCHR=1 -DHAVE_STRSPN=1 -DHAVE_STRSTR=1
 
 CFLAGS=$(CFLAGS_STANDARD) $(GCFLAGS) $(AC_CFLAGS) $(XCFLAGS)
 
@@ -370,7 +378,9 @@
 # AC_LDFLAGS from autoconf
 AC_LDFLAGS=
 
-LDFLAGS= $(AC_LDFLAGS) $(XLDFLAGS)
+LDFLAGS=$(AC_LDFLAGS) $(XLDFLAGS)
+
+LDFLAGS_SO=-shared  -Wl,--out-implib=$(BINDIR)/lib$(GS_SO_BASE).dll.a -Wl,--export-all-symbols -Wl,--enable-auto-import
 
 # Define any extra libraries to link into the executable.
 # ISC Unix 2.2 wants -linet.
@@ -379,7 +389,7 @@
 # Solaris may need -lnsl -lsocket -lposix4.
 # (Libraries required by individual drivers are handled automatically.)
 
-EXTRALIBS=$(XTRALIBS) -lm  -liconv   
+EXTRALIBS=$(XTRALIBS) -lm  -liconv
 AUXEXTRALIBS=$(XTRALIBS) -lm
 
 # Define the standard libraries to search at the end of linking.
@@ -437,7 +447,9 @@
 # on virtually every Unix-a-like system, this is "so",
 # but Apple just had to be different, so it's now set
 # by configure
-DYNANIC_LIB_EXT =       so
+SO_LIB_EXT=so
+DLL_EXT=.dll
+SO_LIB_VERSION_SEPARATOR=-
 
 #CAIRO_CFLAGS	=	@CAIRO_CFLAGS@
 #CAIRO_LIBS	=	@CAIRO_LIBS@
@@ -446,11 +458,11 @@
 
 # Choose the language feature(s) to include.  See gs.mak for details.
 
-FEATURE_DEVS=$(PSD)psl3.dev $(PSD)pdf.dev $(PSD)dpsnext.dev $(PSD)ttfont.dev $(PSD)epsf.dev $(GLD)pipe.dev $(GLD)gsnogc.dev $(GLD)htxlib.dev $(PSD)jbig2.dev $(PSD)jpx.dev 
+FEATURE_DEVS=$(PSD)psl3.dev $(PSD)pdf.dev $(PSD)dpsnext.dev $(PSD)ttfont.dev $(PSD)epsf.dev $(GLD)pipe.dev $(GLD)gsnogc.dev $(GLD)htxlib.dev $(PSD)jbig2.dev $(PSD)jpx.dev
 #FEATURE_DEVS=$(PSD)psl3.dev $(PSD)pdf.dev
 #FEATURE_DEVS=$(PSD)psl3.dev $(PSD)pdf.dev $(PSD)dpsnext.dev $(PSD)ttfont.dev $(PSD)rasterop.dev $(GLD)pipe.dev
 # The following is strictly for testing.
-FEATURE_DEVS_ALL=$(PSD)psl3.dev $(PSD)pdf.dev $(PSD)dpsnext.dev $(PSD)ttfont.dev $(PSD)rasterop.dev $(PSD)double.dev $(PSD)trapping.dev $(PSD)stocht.dev $(GLD)pipe.dev $(GLD)gsnogc.dev $(GLD)htxlib.dev $(PSD)jbig2.dev $(PSD)jpx.dev 
+FEATURE_DEVS_ALL=$(PSD)psl3.dev $(PSD)pdf.dev $(PSD)dpsnext.dev $(PSD)ttfont.dev $(PSD)rasterop.dev $(PSD)double.dev $(PSD)trapping.dev $(PSD)stocht.dev $(GLD)pipe.dev $(GLD)gsnogc.dev $(GLD)htxlib.dev $(PSD)jbig2.dev $(PSD)jpx.dev
 #FEATURE_DEVS=$(FEATURE_DEVS_ALL)
 
 # The list of resources to be included in the %rom% file system.
@@ -503,26 +515,26 @@
 #DEVICE_DEVS9=$(DD)pbm.dev $(DD)pbmraw.dev $(DD)pgm.dev $(DD)pgmraw.dev $(DD)pgnm.dev $(DD)pgnmraw.dev $(DD)pnm.dev $(DD)pnmraw.dev $(DD)ppm.dev $(DD)ppmraw.dev $(DD)pkm.dev $(DD)pkmraw.dev $(DD)pksm.dev $(DD)pksmraw.dev
 #DEVICE_DEVS10=$(DD)tiffcrle.dev $(DD)tiffg3.dev $(DD)tiffg32d.dev $(DD)tiffg4.dev $(DD)tifflzw.dev $(DD)tiffpack.dev
 #DEVICE_DEVS11=$(DD)tiff12nc.dev $(DD)tiff24nc.dev $(DD)tiff48nc.dev $(DD)tiffgray.dev $(DD)tiff32nc.dev $(DD)tiff64nc $(DD)tiffsep.dev $(DD)tiffsep1.dev
-#DEVICE_DEVS12=$(DD)psmono.dev $(DD)psgray.dev $(DD)psrgb.dev $(DD)bit.dev $(DD)bitrgb.dev $(DD)bitcmyk.dev
+#DEVICE_DEVS12=$(DD)bit.dev $(DD)bitrgb.dev $(DD)bitcmyk.dev
 #DEVICE_DEVS13=$(DD)pngmono.dev $(DD)pnggray.dev $(DD)png16.dev $(DD)png256.dev $(DD)png16m.dev
 #DEVICE_DEVS13=@PNGDEVS@
 #DEVICE_DEVS14=$(DD)jpeg.dev $(DD)jpeggray.dev
-#DEVICE_DEVS15=$(DD)pdfwrite.dev $(DD)pswrite.dev $(DD)ps2write.dev $(DD)epswrite.dev $(DD)txtwrite.dev $(DD)pxlmono.dev $(DD)pxlcolor.dev
+#DEVICE_DEVS15=$(DD)pdfwrite.dev $(DD)ps2write.dev $(DD)eps2write.dev $(DD)epswrite.dev $(DD)txtwrite.dev $(DD)pxlmono.dev $(DD)pxlcolor.dev
 #DEVICE_DEVS16=$(DD)bbox.dev
 
 #DEVICE_DEVS17=
 #DEVICE_DEVS18=
 #DEVICE_DEVS19=
 #DEVICE_DEVS20=$(DD)cljet5.dev $(DD)cljet5c.dev
-#DEVICE_DEVS21=$(DD)spotcmyk.dev $(DD)devicen.dev $(DD)xcf.dev $(DD)psdcmyk.dev $(DD)psdrgb.dev
+#DEVICE_DEVS21=$(DD)spotcmyk.dev $(DD)devicen.dev $(DD)xcf.dev $(DD)psdcmyk.dev $(DD)psdrgb.dev $(DD)psdcmykog.dev $(DD)fpng.dev
 DEVICE_DEVS=$(DISPLAY_DEV) 
-DEVICE_DEVS1=$(DD)bit.dev $(DD)bitcmyk.dev $(DD)bitrgb.dev $(DD)bitrgbtags.dev $(DD)bmp16.dev $(DD)bmp16m.dev $(DD)bmp256.dev $(DD)bmp32b.dev $(DD)bmpgray.dev $(DD)bmpmono.dev $(DD)bmpsep1.dev $(DD)bmpsep8.dev $(DD)ccr.dev $(DD)cif.dev $(DD)devicen.dev $(DD)epswrite.dev $(DD)inferno.dev $(DD)jpeg.dev $(DD)jpegcmyk.dev $(DD)jpeggray.dev $(DD)mgr4.dev $(DD)mgr8.dev $(DD)mgrgray2.dev $(DD)mgrgray4.dev $(DD)mgrgray8.dev $(DD)mgrmono.dev $(DD)miff24.dev $(DD)pam.dev $(DD)pamcmyk32.dev $(DD)pamcmyk4.dev $(DD)pbm.dev $(DD)pbmraw.dev $(DD)pcx16.dev $(DD)pcx24b.dev $(DD)pcx256.dev $(DD)pcx2up.dev $(DD)pcxcmyk.dev $(DD)pcxgray.dev $(DD)pcxmono.dev $(DD)pdfwrite.dev $(DD)pgm.dev $(DD)pgmraw.dev $(DD)pgnm.dev $(DD)pgnmraw.dev $(DD)pkm.dev $(DD)pkmraw.dev $(DD)pksm.dev $(DD)pksmraw.dev $(DD)plan.dev $(DD)plan9bm.dev $(DD)planc.dev $(DD)plang.dev $(DD)plank.dev $(DD)planm.dev $(DD)pnm.dev $(DD)pnmraw.dev $(DD)ppm.dev $(DD)ppmraw.dev $(DD)ps2write.dev $(DD)psdcmyk.dev $(DD)psdf.dev $(DD)psdrgb.dev $(DD)psgray.dev $(DD)psmono.dev $(DD)psrgb.dev $(DD)pswrite.dev $(DD)sgirgb.dev $(DD)spotcmyk.dev $(DD)sunhmono.dev $(DD)svgwrite.dev $(DD)txtwrite.dev $(DD)xcf.dev 
+DEVICE_DEVS1=$(DD)bit.dev $(DD)bitcmyk.dev $(DD)bitrgb.dev $(DD)bitrgbtags.dev $(DD)bmp16.dev $(DD)bmp16m.dev $(DD)bmp256.dev $(DD)bmp32b.dev $(DD)bmpgray.dev $(DD)bmpmono.dev $(DD)bmpsep1.dev $(DD)bmpsep8.dev $(DD)ccr.dev $(DD)cfax.dev $(DD)cif.dev $(DD)devicen.dev $(DD)dfaxhigh.dev $(DD)dfaxlow.dev $(DD)eps2write.dev $(DD)epswrite.dev $(DD)fax.dev $(DD)faxg3.dev $(DD)faxg32d.dev $(DD)faxg4.dev $(DD)fpng.dev $(DD)inferno.dev $(DD)ink_cov.dev $(DD)inkcov.dev $(DD)jpeg.dev $(DD)jpegcmyk.dev $(DD)jpeggray.dev $(DD)mgr4.dev $(DD)mgr8.dev $(DD)mgrgray2.dev $(DD)mgrgray4.dev $(DD)mgrgray8.dev $(DD)mgrmono.dev $(DD)miff24.dev $(DD)pam.dev $(DD)pamcmyk32.dev $(DD)pamcmyk4.dev $(DD)pbm.dev $(DD)pbmraw.dev $(DD)pcx16.dev $(DD)pcx24b.dev $(DD)pcx256.dev $(DD)pcx2up.dev $(DD)pcxcmyk.dev $(DD)pcxgray.dev $(DD)pcxmono.dev $(DD)pdfwrite.dev $(DD)pgm.dev $(DD)pgmraw.dev $(DD)pgnm.dev $(DD)pgnmraw.dev $(DD)pkm.dev $(DD)pkmraw.dev $(DD)pksm.dev $(DD)pksmraw.dev $(DD)plan.dev $(DD)plan9bm.dev $(DD)planc.dev $(DD)plang.dev $(DD)plank.dev $(DD)planm.dev $(DD)pnm.dev $(DD)pnmraw.dev $(DD)ppm.dev $(DD)ppmraw.dev $(DD)ps2write.dev $(DD)psdcmyk.dev $(DD)psdcmykog.dev $(DD)psdf.dev $(DD)psdrgb.dev $(DD)sgirgb.dev $(DD)spotcmyk.dev $(DD)sunhmono.dev $(DD)tfax.dev $(DD)tiff12nc.dev $(DD)tiff24nc.dev $(DD)tiff32nc.dev $(DD)tiff48nc.dev $(DD)tiff64nc.dev $(DD)tiffcrle.dev $(DD)tiffg3.dev $(DD)tiffg32d.dev $(DD)tiffg4.dev $(DD)tiffgray.dev $(DD)tifflzw.dev $(DD)tiffpack.dev $(DD)tiffs.dev $(DD)tiffscaled.dev $(DD)tiffsep.dev $(DD)tiffsep1.dev $(DD)txtwrite.dev $(DD)xcf.dev $(DD)xpswrite.dev 
 DEVICE_DEVS2=$(DD)ap3250.dev $(DD)appledmp.dev $(DD)atx23.dev $(DD)atx24.dev $(DD)atx38.dev $(DD)bj10e.dev $(DD)bj200.dev $(DD)bjc600.dev $(DD)bjc800.dev $(DD)cdeskjet.dev $(DD)cdj500.dev $(DD)cdj550.dev $(DD)cdjcolor.dev $(DD)cdjmono.dev $(DD)cljet5.dev $(DD)cljet5c.dev $(DD)cljet5pr.dev $(DD)coslw2p.dev $(DD)coslwxl.dev $(DD)cp50.dev $(DD)declj250.dev $(DD)deskjet.dev $(DD)dj505j.dev $(DD)djet500.dev $(DD)djet500c.dev $(DD)dnj650c.dev $(DD)eps9high.dev $(DD)eps9mid.dev $(DD)epson.dev $(DD)epsonc.dev $(DD)escp.dev $(DD)fs600.dev $(DD)hl7x0.dev $(DD)ibmpro.dev $(DD)imagen.dev $(DD)iwhi.dev $(DD)iwlo.dev $(DD)iwlq.dev $(DD)jetp3852.dev $(DD)laserjet.dev $(DD)lbp8.dev $(DD)lips3.dev $(DD)lj250.dev $(DD)lj3100sw.dev $(DD)lj4dith.dev $(DD)lj4dithp.dev $(DD)lj5gray.dev $(DD)lj5mono.dev $(DD)ljet2p.dev $(DD)ljet3.dev $(DD)ljet3d.dev $(DD)ljet4.dev $(DD)ljet4d.dev $(DD)ljet4pjl.dev $(DD)ljetplus.dev $(DD)lp2563.dev $(DD)lp8000.dev $(DD)lq850.dev $(DD)lxm5700m.dev $(DD)m8510.dev $(DD)necp6.dev $(DD)oce9050.dev $(DD)oki182.dev $(DD)okiibm.dev $(DD)paintjet.dev $(DD)photoex.dev $(DD)picty180.dev $(DD)pj.dev $(DD)pjetxl.dev $(DD)pjxl.dev $(DD)pjxl300.dev $(DD)pxlcolor.dev $(DD)pxlmono.dev $(DD)r4081.dev $(DD)rinkj.dev $(DD)sj48.dev $(DD)st800.dev $(DD)stcolor.dev $(DD)t4693d2.dev $(DD)t4693d4.dev $(DD)t4693d8.dev $(DD)tek4696.dev $(DD)uniprint.dev 
 DEVICE_DEVS3=
 DEVICE_DEVS4=
 DEVICE_DEVS5=
 DEVICE_DEVS6=$(DD)png16.dev $(DD)png16m.dev $(DD)png256.dev $(DD)png48.dev $(DD)pngalpha.dev $(DD)pnggray.dev $(DD)pngmono.dev 
-DEVICE_DEVS7=$(PSD)jbig2.dev
+DEVICE_DEVS7=
 DEVICE_DEVS8=
 DEVICE_DEVS9=
 DEVICE_DEVS10=
@@ -569,7 +581,6 @@
 CC_SHARED=$(CC_) 
 
 LD_SET_DT_SONAME=-soname=
-FOR_MAC=
 
 # MAKEDIRS = the dependency on ALL object files (must be the last one on
 # the line. Requires GNU make to make it an 'order only' dependency
@@ -583,6 +594,7 @@
 INSTALL_CONTRIB=
 include $(GLSRCDIR)/unixhead.mak
 include $(GLSRCDIR)/gs.mak
+include $(GLSRCDIR)/trio.mak
 # psromfs.mak must precede lib.mak
 include $(PSSRCDIR)/psromfs.mak
 include $(GLSRCDIR)/lib.mak
@@ -602,8 +614,8 @@
 include $(GLSRCDIR)/ijs.mak
 
 
-include $(GLSRCDIR)/devs.mak
-include $(GLSRCDIR)/contrib.mak
+include $(DEVSRCDIR)/devs.mak
+include $(DEVSRCDIR)/contrib.mak
 include $(GLSRCDIR)/unix-aux.mak
 include $(GLSRCDIR)/unixlink.mak
 include $(GLSRCDIR)/unix-dll.mak
@@ -613,16 +625,11 @@
 
 
 # Clean up after the autotools scripts
-# configure.ac and Makefile.in are symlinks from a subdir 
-# (created by autogen.sh) and so are safe to remove
 distclean : clean config-clean soclean pgclean debugclean mementoclean
 	-$(RM_) -r $(BINDIR) $(GLOBJDIR) $(PSOBJDIR) $(AUXDIR)
 	-$(RM_) -r autom4te.cache
 	-$(RM_) config.log config.status
 	-$(RM_) Makefile
-# The following is *very* poor - we shouldn't be creating derived files in
-# the source directory, but for now.....
-	-$(RM_) $(TIFFSRCDIR)$(D)libtiff$(D)tif_config.h $(TIFFSRCDIR)$(D)libtiff$(D)tiffconf.h
 
 # a debug-clean target for consistency with the ghostpdl builds
 debug-clean : debugclean
@@ -630,9 +637,7 @@
 memento-clean : mementoclean
 
 maintainer-clean : distclean
-	-$(RM_) configure.ac
 	-$(RM_) configure
-	-$(RM_) Makefile.in
 
 check : default
 	$(NO_OP)
diff -r 95454fa2df8b -r a81cdbc000f2 src/ghostscript.mk
--- a/src/ghostscript.mk	Mon Jul 28 15:41:31 2014 -0400
+++ b/src/ghostscript.mk	Tue Jul 29 16:20:33 2014 -0400
@@ -3,8 +3,8 @@
 
 PKG             := ghostscript
 $(PKG)_IGNORE   :=
-$(PKG)_VERSION  := 9.07
-$(PKG)_CHECKSUM := 550a85e73b7213d8ae41ea06523661638b4bc1a2
+$(PKG)_VERSION  := 9.14
+$(PKG)_CHECKSUM := eab1c9e9850d8aedf02d16f3f7f8198ad9384068
 $(PKG)_SUBDIR   := $(PKG)-$($(PKG)_VERSION)
 $(PKG)_FILE     := $(PKG)-$($(PKG)_VERSION).tar.bz2
 $(PKG)_URL      := http://downloads.ghostscript.com/public/$($(PKG)_FILE)
 
# HG changeset patch
# User Sergey Plotnikov <seryozha.plotnikov@gmail.com>
# Date 1406801243 -7200
#      Thu Jul 31 12:07:23 2014 +0200
# Node ID b970e2f022e255cc0dfaf04df1c1de10aa96bd8f
# Parent  b2492cf0b62961bac7c89247a09d72064eefbb79
remove ghostscript

diff -r b2492cf0b629 -r b970e2f022e2 dist-files.mk
--- a/dist-files.mk	Wed Jul 30 10:16:09 2014 +0200
+++ b/dist-files.mk	Thu Jul 31 12:07:23 2014 +0200
@@ -112,10 +112,6 @@
   geos-test.c \
   geos.mk \
   gettext.mk \
-  ghostscript-mingw-i686-arch.h \
-  ghostscript-mingw-i686-gconfig_.h \
-  ghostscript-mingw-i686-makefile \
-  ghostscript.mk \
   giflib.mk \
   gl2ps-1-fixes.patch \
   gl2ps.mk \
diff -r b2492cf0b629 -r b970e2f022e2 index.html
--- a/index.html	Wed Jul 30 10:16:09 2014 +0200
+++ b/index.html	Thu Jul 31 12:07:23 2014 +0200
@@ -1222,10 +1222,6 @@
         <td class="website"><a href="http://www.gnu.org/software/gettext/">gettext</a></td>
     </tr>
     <tr>
-        <td class="package">ghostscript</td>
-        <td class="website"><a href="http://ghostscript.com">ghostscript</a></td>
-    </tr>
-    <tr>
         <td class="package">giflib</td>
         <td class="website"><a href="http://sourceforge.net/projects/libungif/">giflib</a></td>
     </tr>
diff -r b2492cf0b629 -r b970e2f022e2 src/ghostscript-mingw-i686-arch.h
--- a/src/ghostscript-mingw-i686-arch.h	Wed Jul 30 10:16:09 2014 +0200
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,40 +0,0 @@
-/* Parameters derived from machine and compiler architecture. */
-/* This file is generated mechanically by genarch.c. */
-
-	 /* ---------------- Scalar alignments ---------------- */
-
-#define ARCH_ALIGN_SHORT_MOD 2
-#define ARCH_ALIGN_INT_MOD 4
-#define ARCH_ALIGN_LONG_MOD 4
-#define ARCH_ALIGN_PTR_MOD 4
-#define ARCH_ALIGN_FLOAT_MOD 4
-#define ARCH_ALIGN_DOUBLE_MOD 8
-
-	 /* ---------------- Scalar sizes ---------------- */
-
-#define ARCH_LOG2_SIZEOF_CHAR 0
-#define ARCH_LOG2_SIZEOF_SHORT 1
-#define ARCH_LOG2_SIZEOF_INT 2
-#define ARCH_LOG2_SIZEOF_LONG 2
-#define ARCH_LOG2_SIZEOF_LONG_LONG 3
-#define ARCH_SIZEOF_GX_COLOR_INDEX 8
-#define ARCH_SIZEOF_PTR 4
-#define ARCH_SIZEOF_FLOAT 4
-#define ARCH_SIZEOF_DOUBLE 8
-#define ARCH_FLOAT_MANTISSA_BITS 24
-#define ARCH_DOUBLE_MANTISSA_BITS 53
-
-	 /* ---------------- Unsigned max values ---------------- */
-
-#define ARCH_MAX_UCHAR ((unsigned char)0xff + (unsigned char)0)
-#define ARCH_MAX_USHORT ((unsigned short)0xffff + (unsigned short)0)
-#define ARCH_MAX_UINT ((unsigned int)~0 + (unsigned int)0)
-#define ARCH_MAX_ULONG ((unsigned long)~0L + (unsigned long)0)
-
-	 /* ---------------- Miscellaneous ---------------- */
-
-#define ARCH_IS_BIG_ENDIAN 0
-#define ARCH_PTRS_ARE_SIGNED 0
-#define ARCH_FLOATS_ARE_IEEE 1
-#define ARCH_ARITH_RSHIFT 2
-#define ARCH_DIV_NEG_POS_TRUNCATES 1
diff -r b2492cf0b629 -r b970e2f022e2 src/ghostscript-mingw-i686-gconfig_.h
--- a/src/ghostscript-mingw-i686-gconfig_.h	Wed Jul 30 10:16:09 2014 +0200
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,26 +0,0 @@
-/* This file was generated automatically by unix-aux.mak. */
-
-#ifndef HAVE_DIRENT_H
-#define HAVE_DIRENT_H 0
-#endif
-
-#ifndef HAVE_NDIR_H
-#define HAVE_NDIR_H 0
-#endif
-
-#ifndef HAVE_SYS_DIR_H
-#define HAVE_SYS_DIR_H 0
-#endif
-
-#ifndef HAVE_SYS_NDIR_H
-#define HAVE_SYS_NDIR_H 0
-#endif
-
-#ifndef HAVE_SYS_TIME_H
-#define HAVE_SYS_TIME_H 0
-#endif
-
-#ifndef HAVE_SYS_TIMES_H
-#define HAVE_SYS_TIMES_H 0
-#endif
-
diff -r b2492cf0b629 -r b970e2f022e2 src/ghostscript-mingw-i686-makefile
--- a/src/ghostscript-mingw-i686-makefile	Wed Jul 30 10:16:09 2014 +0200
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,644 +0,0 @@
-# Copyright (C) 2001-2014 Artifex Software, Inc.
-# All Rights Reserved.
-#
-# This software is provided AS-IS with no warranty, either express or
-# implied.
-#
-# This software is distributed under license and may not be copied,
-# modified or distributed except as expressly authorized under the terms
-# of the license contained in the file LICENSE in this distribution.
-#
-# Refer to licensing information at http://www.artifex.com or contact
-# Artifex Software, Inc.,  7 Mt. Lassen Drive - Suite A-134, San Rafael,
-# CA  94903, U.S.A., +1(415)492-9861, for further information.
-#
-# makefile template for/from the autoconf build.
-# Makefile.  Generated from Makefile.in by configure.
-
-# ------------------------------- Options ------------------------------- #
-
-####### The following are the only parts of the file you should need to edit.
-
-# Define the directory for the final executable, and the
-# source, generated intermediate file, and object directories
-# for the graphics library (GL) and the PostScript/PDF interpreter (PS).
-
-BINDIR=./$(BUILDDIRPREFIX)bin
-GLSRCDIR=./base
-DEVSRCDIR=./devices
-GLGENDIR=./$(BUILDDIRPREFIX)obj
-GLOBJDIR=./$(BUILDDIRPREFIX)obj
-DEVGENDIR=./$(BUILDDIRPREFIX)obj
-DEVOBJDIR=./$(BUILDDIRPREFIX)obj
-AUXDIR=$(GLGENDIR)/aux_
-PSSRCDIR=./psi
-PSLIBDIR=./lib
-PSRESDIR=./Resource
-PSGENDIR=./$(BUILDDIRPREFIX)obj
-PSOBJDIR=./$(BUILDDIRPREFIX)obj
-CONTRIBDIR=./contrib
-
-# Do not edit the next group of lines.
-
-include $(GLSRCDIR)/version.mak
-DD=$(GLGENDIR)/
-GLD=$(GLGENDIR)/
-PSD=$(PSGENDIR)/
-
-# ------ Generic options ------ #
-
-# Define the installation commands and target directories for
-# executables and files.  The commands are only relevant to `make install';
-# the directories also define the default search path for the
-# initialization files (gs_*.ps) and the fonts.
-
-INSTALL = $(GLSRCDIR)/instcopy -c
-INSTALL_PROGRAM = $(INSTALL) -m 755
-INSTALL_DATA = $(INSTALL) -m 644
-INSTALL_SHARED = 
-
-prefix = /usr/local
-exec_prefix = ${prefix}
-bindir = ${exec_prefix}/bin
-scriptdir = $(bindir)
-includedir = ${prefix}/include
-libdir = ${exec_prefix}/lib
-mandir = ${datarootdir}/man
-man1ext = 1
-man1dir = $(mandir)/man$(man1ext)
-datadir = ${datarootdir}
-datarootdir = ${prefix}/share
-
-# The following must be substituted using ${datarootdir} and ${exec_prefix}/lib
-# to avoid adding RPM generation paths (CUPS STR #1112)
-gsdir = ${datarootdir}/ghostscript
-gsdatadir = $(gsdir)/$(GS_DOT_VERSION)
-gssharedir = ${exec_prefix}/lib/ghostscript/$(GS_DOT_VERSION)
-gsincludedir = ${prefix}/include/ghostscript/
-
-docdir=$(gsdatadir)/doc
-exdir=$(gsdatadir)/examples
-GS_DOCDIR=$(docdir)
-
-# Choose whether to compile the .ps initialization files into the executable.
-# See gs.mak for details.
-
-COMPILE_INITS=1
-
-# Define the default directory/ies for the runtime
-# initialization and font files.  Separate multiple directories with a :.
-
-GS_LIB_DEFAULT=$(gsdatadir)/Resource/Init:$(gsdatadir)/lib:$(gsdatadir)/Resource/Font:$(gsdir)/fonts:${datarootdir}/fonts/default/ghostscript:${datarootdir}/fonts/default/Type1:${datarootdir}/fonts/default/TrueType:/usr/lib/DPS/outline/base:/usr/openwin/lib/X11/fonts/Type1:/usr/openwin/lib/X11/fonts/TrueType
-
-# Define the default directory for cached data files
-# this must be a single path.
-
-GS_CACHE_DIR="~/.ghostscript/cache/"
-
-# Define whether or not searching for initialization files should always
-# look in the current directory first.  This leads to well-known security
-# and confusion problems,  but may be convenient sometimes.
-
-SEARCH_HERE_FIRST=0
-
-# Define the name of the interpreter initialization file.
-# (There is no reason to change this.)
-
-GS_INIT=gs_init.ps
-
-# Choose generic configuration options.
-
-TARGET_ARCH_FILE=
-
-# -DDEBUG
-#	includes debugging features (-Z switch) in the code.
-#	  Code runs substantially slower even if no debugging switches
-#	  are set.
-
-GENOPT=
-
-# Choose capability options.
-
-# -DHAVE_BSWAP32
-#       use bswap32 intrinsic
-# -DHAVE_BYTESWAP_H
-#       use byteswap.h functions
-#
-# -DHAVE_MKSTEMP
-#	uses mkstemp instead of mktemp
-#		This uses the more secure temporary file creation call
-#		Enable this if it is available on your platform.
-# -DHAVE_FILE64
-#	use marked versions of the stdio FILE calls, fopen64() et al.
-#
-# -DHAVE_MKSTEMP64
-#	use non-standard function mkstemp64()
-#
-# -DHAVE_LIBIDN
-#	use libidn to canonicalize Unicode passwords
-#
-# -DHAVE_SETLOCALE
-#	call setlocale(LC_CTYPE) when running as a standalone app
-# -DHAVE_SSE2
-#       use sse2 intrinsics
-
-CAPOPT=  -DHAVE_FILE64 -DHAVE_SETLOCALE -DHAVE_BSWAP32  -DHAVE_STRERROR
-
-# Define the name of the executable file.
-
-GS=gs.exe
-GS_SO_BASE=gs
-XE=.exe
-XEAUX=.exe
-
-# Define the directories for debugging and profiling binaries, relative to
-# the standard binaries.
-
-DEBUGDIRPREFIX=debug
-MEMENTODIRPREFIX=mem
-PGDIRPREFIX=pg
-
-# Define whether to compile in the FreeType library, and if so, where
-# the source tree is location. Otherwise, what library name to use
-# in linking to a shared implementation.
-
-FT_BRIDGE=1
-SHARE_FT=0
-FTSRCDIR=freetype
-FT_CFLAGS=-Ifreetype/include
-FT_LIBS=
-FT_CONFIG_SYSTEM_ZLIB=
-
-# Define whether to compile in UFST. Note that freetype will/must be disabled.
-# FAPI/UFST depends on UFST_BRIDGE being undefined - hence the construct below.
-# (i.e. use "UFST_BRIDGE=1" or *not to define UFST_BRIDGE to anything*)
-
-UFST_ROOT=
-UFST_LIB_EXT=
-
-UFST_ROMFS_ARGS?=-b \
- -P $(UFST_ROOT)/fontdata/mtfonts/pcl45/mt3/ -d fontdata/mtfonts/pcl45/mt3/ pcl___xj.fco plug__xi.fco wd____xh.fco \
- -P $(UFST_ROOT)/fontdata/mtfonts/pclps2/mt3/ -d fontdata/mtfonts/pclps2/mt3/ pclp2_xj.fco \
- -c -P $(PSSRCDIR)/../lib/ -d Resource/Init/ FAPIconfig-FCO
-
-UFSTROMFONTDIR=\"%rom%fontdata/\"
-UFSTDISCFONTDIR?=\"$(UFST_ROOT)/fontdata/\"
-
-
-UFST_CFLAGS=
-
-# Define the directory where the IJG JPEG library sources are stored,
-# and the major version of the library that is stored there.
-# You may need to change this if the IJG library version changes.
-# See jpeg.mak for more information.
-
-JSRCDIR=jpeg
-
-# Note: if a shared library is used, it may not contain the
-# D_MAX_BLOCKS_IN_MCU patch, and thus may not be able to read
-# some older JPEG streams that violate the standard. If the JPEG
-# library built from local sources, the patch will be applied.
-
-SHARE_JPEG=1
-JPEG_NAME=jpeg
-
-# Define the directory where the PNG library sources are stored,
-# and the version of the library that is stored there.
-# You may need to change this if the libpng version changes.
-# See png.mak for more information.
-
-SHARE_LIBPNG=1
-PNGSRCDIR=
-LIBPNG_NAME=png
-
-# libtiff
-SHARE_LIBTIFF=1
-TIFFSRCDIR=
-TIFFCONFDIR=
-TIFFPLATFORM=unix
-TIFFCONFIG_SUFFIX=
-LIBTIFF_NAME=tiff
-
-# Define the directory where the zlib sources are stored.
-# See zlib.mak for more information.
-
-SHARE_ZLIB=0
-ZSRCDIR=zlib
-#ZLIB_NAME=gz
-ZLIB_NAME=z
-
-# Choose shared or compiled in libjbig2dec and source location
-# JBIG2_LIB=jbig2dec
-JBIG2_LIB=jbig2dec
-SHARE_JBIG2=0
-JBIG2SRCDIR=jbig2dec
-JBIG2_CFLAGS=-DHAVE_STDINT_H=1
-
-# uncomment the following three lines and one of the last two to
-# compile in the Luratech ldf_jb2 codec
-#JBIG2_LIB=luratech
-#SHARE_JBIG2=0
-#JBIG2SRCDIR=ldf_jb2
-#JBIG2_CFLAGS=-DUSE_LDF_JB2 -DLINUX
-#JBIG2_CFLAGS=-DUSE_LDF_JB2 -DMAC -DMAC_OS_X_BUILD
-
-
-# Choose the library to use for (JPXDecode support)
-# whether to link to an external build or compile in from source
-# and source location and configuration flags for compiling in
-JPX_LIB=openjpeg
-SHARE_JPX=0
-JPXSRCDIR=openjpeg
-JPX_CFLAGS=-DUSE_OPENJPEG_JP2 -D"memalign(a,b)=malloc(b)"
-
-# uncomment the following three lines and one of the last two to
-# compile in the Luratech lwf_jp2 codec
-#JPX_LIB=luratech
-#SHARE_JPX=0
-#JPXSRCDIR=lwf_jp2
-#JPX_CFLAGS=-DUSE_LWF_JP2 -DLINUX
-#JPX_CFLAGS=-DUSE_LWF_JP2 -DMAC -DMAC_OS_X_BUILD
-
-# Uncomment the following 4 lines to to compile in OpenJPEG codec
-#JPX_LIB=openjpeg
-#SHARE_JPX=0
-#JPXSRCDIR=openjpeg
-#JPX_CFLAGS=-DUSE_OPENJPEG_JP2 -DOPJ_STATIC
-
-# options for lcms color management library
-SHARE_LCMS=0
-LCMSSRCDIR=
-LCMS2SRCDIR=lcms2
-LCMS_CFLAGS=
-LCMS2_CFLAGS= 
-
-# Which CMS are we using?
-# Options are currently lcms or lcms2
-WHICH_CMS=lcms2
-
-# Define the directory where the ijs source is stored,
-# and the process forking method to use for the server.
-# See ijs.mak for more information.
- 
-SHARE_IJS=0
-IJS_NAME=
-IJSSRCDIR=src
-IJSEXECTYPE=unix
-
-# Define install location for 'cups' device/filter support
-CUPSCFLAGS=
-CUPSLIBS=
-CUPSLIBDIRS=
-CUPSSERVERBIN=
-CUPSSERVERROOT=
-CUPSDATA=
-CUPSPDFTORASTER=0
-
-SHARE_LCUPS=1
-LCUPS_NAME=cups
-LCUPSSRCDIR=cups
-LCUPSBUILDTYPE=
-CUPS_CC=$(CC)
-
-SHARE_LCUPSI=1
-LCUPSI_NAME=cupsimage
-LCUPSISRCDIR=./cups
-CUPS_CC=$(CC)
-
-
-TRIOSRCDIR=trio
-AC_TRIO_CFLAGS=    
-TRIO_CFLAGS=$(TRIO_XCFLAGS) $(AC_TRIO_CFLAGS)
-
-# Define how to build the library archives.  (These are not used in any
-# standard configuration.)
-
-AR=ar
-ARFLAGS=qc
-RANLIB=ranlib
-
-# ------ Platform-specific options ------ #
-
-# Define the name of the C compiler (target and host (AUX))
-
-CC=gcc
-CCAUX=gcc
-
-# Define the name of the linker for the final link step.
-# Normally this is the same as the C compiler.
-
-CCLD=$(CC)
-CCAUXLD=$(CCAUX)
-
-# Define the default gcc flags.
-GCFLAGS=-Wall -Wstrict-prototypes -Wundef -Wmissing-declarations -Wmissing-prototypes -Wwrite-strings -Wno-strict-aliasing -Wdeclaration-after-statement -fno-builtin -fno-common -DHAVE_STDINT_H=1 -DHAVE_DIRENT_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_INTTYPES_H=1 -DGX_COLOR_INDEX_TYPE="unsigned long long" -DGS_NO_UTF8=1  -DNOCONTRIB -DUSE_LIBICONV_GNU
-
-# Define the added flags for standard, debugging, profiling 
-# and shared object builds.
-
-CFLAGS_STANDARD= -O
-CFLAGS_DEBUG=
-CFLAGS_PROFILE=-pg  -O
-CFLAGS_SO=
-
-# Define the other compilation flags.  Add at most one of the following:
-#	-DBSD4_2 for 4.2bsd systems.
-#	-DSYSV for System V or DG/UX.
-# 	-DSYSV -D__SVR3 for SCO ODT, ISC Unix 2.2 or before,
-#	   or any System III Unix, or System V release 3-or-older Unix.
-#	-DSVR4 -DSVR4_0 (not -DSYSV) for System V release 4.0.
-#	-DSVR4 (not -DSYSV) for System V release 4.2 (or later) and Solaris 2.
-# XCFLAGS can be set from the command line.
-# We don't include -ansi, because this gets in the way of the platform-
-#   specific stuff that <math.h> typically needs; nevertheless, we expect
-#   gcc to accept ANSI-style function prototypes and function definitions.
-# CFLAGS from autoconf
-AC_CFLAGS=
-
-# fontconfig flags, used by unix-aux.mak
-FONTCONFIG_CFLAGS=
-FONTCONFIG_LIBS=
-
-# DBus flags, used by cups.mak
-DBUS_CFLAGS=
-DBUS_LIBS=
-
-# defines from autoconf; note that we don't use these at present.
-ACDEFS=-DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DHAVE_DIRENT_H=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_ERRNO_H=1 -DHAVE_FCNTL_H=1 -DHAVE_LIMITS_H=1 -DHAVE_MALLOC_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_PARAM_H=1 -DHAVE_SYS_TIME_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DIRENT_H=1 -DHAVE_INTTYPES_H=1 -DTIME_WITH_SYS_TIME=1 -DSIZEOF_UNSIGNED_LONG_INT=4 -DSIZEOF_UNSIGNED_LONG_LONG=8 -DHAVE_LIBM=1 -DUSE_LIBICONV_GNU=1 -DHAVE_LCMS2_H=1 -DX_DISPLAY_MISSING=1 -DHAVE_FOPEN64=1 -DHAVE_FSEEKO=1 -DHAVE_SETLOCALE=1 -DHAVE_STRERROR=1 -Dvfork=fork -DHAVE_STDLIB_H=1 -DHAVE_MALLOC=1 -DRETSIGTYPE=void -DHAVE_VPRINTF=1 -DHAVE_DUP2=1 -DHAVE_FLOOR=1 -DHAVE_GETTIMEOFDAY=1 -DHAVE_MEMCHR=1 -DHAVE_MEMMOVE=1 -DHAVE_MEMSET=1 -DHAVE_MKDIR=1 -DHAVE_MODF=1 -DHAVE_POW=1 -DHAVE_PUTENV=1 -DHAVE_RINT=1 -DHAVE_SQRT=1 -DHAVE_STRCHR=1 -DHAVE_STRRCHR=1 -DHAVE_STRSPN=1 -DHAVE_STRSTR=1
-
-CFLAGS=$(CFLAGS_STANDARD) $(GCFLAGS) $(AC_CFLAGS) $(XCFLAGS)
-
-# Define platform flags for ld.
-# SunOS 4.n may need -Bstatic.
-# Solaris 2.6 (and possibly some other versions) with any of the SHARE_
-# parameters set to 1 may need
-#	-R /usr/local/xxx/lib:/usr/local/lib
-# giving the full path names of the shared library directories.
-# XLDFLAGS can be set from the command line.
-# AC_LDFLAGS from autoconf
-AC_LDFLAGS=
-
-LDFLAGS=$(AC_LDFLAGS) $(XLDFLAGS)
-
-LDFLAGS_SO=-shared  -Wl,--out-implib=$(BINDIR)/lib$(GS_SO_BASE).dll.a -Wl,--export-all-symbols -Wl,--enable-auto-import
-
-# Define any extra libraries to link into the executable.
-# ISC Unix 2.2 wants -linet.
-# SCO Unix needs -lsocket if you aren't including the X11 driver.
-# SVR4 may need -lnsl.
-# Solaris may need -lnsl -lsocket -lposix4.
-# (Libraries required by individual drivers are handled automatically.)
-
-EXTRALIBS=$(XTRALIBS) -lm  -liconv
-AUXEXTRALIBS=$(XTRALIBS) -lm
-
-# Define the standard libraries to search at the end of linking.
-# Most platforms require -lpthread for the POSIX threads library;
-# on FreeBSD, change -lpthread to -lc_r; BSDI and perhaps some others
-# include pthreads in libc and don't require any additional library.
-# All reasonable platforms require -lm, but Rhapsody and perhaps one or
-# two others fold libm into libc and don't require any additional library.
-
-STDLIBS= -lm
-
-# Define the include switch(es) for the X11 header files.
-# This can be null if handled in some other way (e.g., the files are
-# in /usr/include, or the directory is supplied by an environment variable)
-
-XINCLUDE=
-
-# Define the directory/ies and library names for the X11 library files.
-# XLIBDIRS is for ld and should include -L; XLIBDIR is for LD_RUN_PATH
-# (dynamic libraries on SVR4) and should not include -L.
-# Newer SVR4 systems can use -R in XLIBDIRS rather than setting XLIBDIR.
-# Both can be null if these files are in the default linker search path.
-
-# Solaris and other SVR4 systems with dynamic linking probably want
-#XLIBDIRS=-L/usr/openwin/lib -R/usr/openwin/lib
-# X11R6 (on any platform) may need
-#XLIBS=Xt SM ICE Xext X11
-
-# We use the autoconf macro AC_PATH_XTRA which defines X_LIBS with
-# the -L (or whatever). It also defines X_PRE_LIBS and X_EXTRA_LIBS 
-# all three of which are stripped and slotted into XLIBS below.
-# Usually however, all but X_LIBS are empty on modern platforms.
-XLIBDIRS=
-XLIBDIR=
-#XLIBS=Xt Xext X11
-XLIBS=
-
-# Define the .dev module that implements thread and synchronization
-# primitives for this platform.
-
-# If POSIX sync primitives are used, also change the STDLIBS to include
-# the pthread library. Otherwise use SYNC=nosync
-#SYNC=posync
-#SYNC=nosync
-SYNC=nosync
-
-# programs we use
-RM=rm -f
-
-# ------ Dynamic loader options ------- #
-SOC_CFLAGS	=	
-SOC_LIBS	=	
-SOC_LOADER	=	dxmainc.c
-
-# on virtually every Unix-a-like system, this is "so",
-# but Apple just had to be different, so it's now set
-# by configure
-SO_LIB_EXT=so
-DLL_EXT=.dll
-SO_LIB_VERSION_SEPARATOR=-
-
-#CAIRO_CFLAGS	=	@CAIRO_CFLAGS@
-#CAIRO_LIBS	=	@CAIRO_LIBS@
-
-# ------ Devices and features ------ #
-
-# Choose the language feature(s) to include.  See gs.mak for details.
-
-FEATURE_DEVS=$(PSD)psl3.dev $(PSD)pdf.dev $(PSD)dpsnext.dev $(PSD)ttfont.dev $(PSD)epsf.dev $(GLD)pipe.dev $(GLD)gsnogc.dev $(GLD)htxlib.dev $(PSD)jbig2.dev $(PSD)jpx.dev
-#FEATURE_DEVS=$(PSD)psl3.dev $(PSD)pdf.dev
-#FEATURE_DEVS=$(PSD)psl3.dev $(PSD)pdf.dev $(PSD)dpsnext.dev $(PSD)ttfont.dev $(PSD)rasterop.dev $(GLD)pipe.dev
-# The following is strictly for testing.
-FEATURE_DEVS_ALL=$(PSD)psl3.dev $(PSD)pdf.dev $(PSD)dpsnext.dev $(PSD)ttfont.dev $(PSD)rasterop.dev $(PSD)double.dev $(PSD)trapping.dev $(PSD)stocht.dev $(GLD)pipe.dev $(GLD)gsnogc.dev $(GLD)htxlib.dev $(PSD)jbig2.dev $(PSD)jpx.dev
-#FEATURE_DEVS=$(FEATURE_DEVS_ALL)
-
-# The list of resources to be included in the %rom% file system.
-# This is in the top makefile since the file descriptors are platform specific
-RESOURCE_LIST=Resource/CMap/ Resource/ColorSpace/ Resource/Decoding/ Resource/Font/ Resource/ProcSet/ Resource/IdiomSet/ Resource/CIDFont/
-
-# Choose whether to store band lists on files or in memory.
-# The choices are 'file' or 'memory'.
-
-BAND_LIST_STORAGE=file
-
-# Choose which compression method to use when storing band lists in memory.
-# The choices are 'lzw' or 'zlib'.
-
-BAND_LIST_COMPRESSOR=zlib
-
-# Choose the implementation of file I/O: 'stdio', 'fd', or 'both'.
-# See gs.mak and sfxfd.c for more details.
-
-FILE_IMPLEMENTATION=stdio
-
-# Choose the implementation of stdio: '' for file I/O and 'c' for callouts
-# See gs.mak and ziodevs.c/ziodevsc.c for more details.
-
-STDIO_IMPLEMENTATION=c
-
-# List of default devices, in order of priority. They need not be 
-# present in the actual build.
-GS_DEV_DEFAULT="x11alpha bbox"
-
-# Fallback default device.  This is set to 'display' by 
-# unix-dll.mak when building a shared object.
-DISPLAY_DEV=$(DD)bbox.dev
-
-# Choose the device(s) to include.  See devs.mak for details,
-# devs.mak and contrib.mak for the list of available devices.
-
-#DEVICE_DEVS=$(DISPLAY_DEV) $(DD)x11.dev $(DD)x11alpha.dev $(DD)x11cmyk.dev $(DD)x11gray2.dev $(DD)x11gray4.dev $(DD)x11mono.dev
-#DEVICE_DEVS=$(DISPLAY_DEV) @X11DEVS@
-#DEVICE_DEVS=$(DISPLAY_DEV) @X_DEVS@
-
-#DEVICE_DEVS1=$(DD)bmpmono.dev $(DD)bmpgray.dev $(DD)bmpsep1.dev $(DD)bmpsep8.dev $(DD)bmp16.dev $(DD)bmp256.dev $(DD)bmp16m.dev $(DD)bmp32b.dev
-#DEVICE_DEVS2=#$(DD)gdevjbig2.dev $(DD)gdevjpx.dev #$(DD)rinkj.dev
-#DEVICE_DEVS3=$(DD)deskjet.dev $(DD)djet500.dev $(DD)laserjet.dev $(DD)ljetplus.dev $(DD)ljet2p.dev $(DD)ljet3.dev $(DD)ljet3d.dev $(DD)ljet4.dev $(DD)ljet4d.dev $(DD)lj5mono.dev $(DD)lj5gray.dev
-#DEVICE_DEVS4=$(DD)cdeskjet.dev $(DD)cdjcolor.dev $(DD)cdjmono.dev $(DD)cdj550.dev $(DD)pj.dev $(DD)pjxl.dev $(DD)pjxl300.dev
-#DEVICE_DEVS5=$(DD)uniprint.dev @IJSDEVS@
-#DEVICE_DEVS6=$(DD)bj10e.dev $(DD)bj200.dev $(DD)bjc600.dev $(DD)bjc800.dev
-#DEVICE_DEVS7=$(DD)faxg3.dev $(DD)faxg32d.dev $(DD)faxg4.dev $(DD)cfax.dev
-#DEVICE_DEVS8=$(DD)pcxmono.dev $(DD)pcxgray.dev $(DD)pcx16.dev $(DD)pcx256.dev $(DD)pcx24b.dev $(DD)pcxcmyk.dev
-#DEVICE_DEVS9=$(DD)pbm.dev $(DD)pbmraw.dev $(DD)pgm.dev $(DD)pgmraw.dev $(DD)pgnm.dev $(DD)pgnmraw.dev $(DD)pnm.dev $(DD)pnmraw.dev $(DD)ppm.dev $(DD)ppmraw.dev $(DD)pkm.dev $(DD)pkmraw.dev $(DD)pksm.dev $(DD)pksmraw.dev
-#DEVICE_DEVS10=$(DD)tiffcrle.dev $(DD)tiffg3.dev $(DD)tiffg32d.dev $(DD)tiffg4.dev $(DD)tifflzw.dev $(DD)tiffpack.dev
-#DEVICE_DEVS11=$(DD)tiff12nc.dev $(DD)tiff24nc.dev $(DD)tiff48nc.dev $(DD)tiffgray.dev $(DD)tiff32nc.dev $(DD)tiff64nc $(DD)tiffsep.dev $(DD)tiffsep1.dev
-#DEVICE_DEVS12=$(DD)bit.dev $(DD)bitrgb.dev $(DD)bitcmyk.dev
-#DEVICE_DEVS13=$(DD)pngmono.dev $(DD)pnggray.dev $(DD)png16.dev $(DD)png256.dev $(DD)png16m.dev
-#DEVICE_DEVS13=@PNGDEVS@
-#DEVICE_DEVS14=$(DD)jpeg.dev $(DD)jpeggray.dev
-#DEVICE_DEVS15=$(DD)pdfwrite.dev $(DD)ps2write.dev $(DD)eps2write.dev $(DD)epswrite.dev $(DD)txtwrite.dev $(DD)pxlmono.dev $(DD)pxlcolor.dev
-#DEVICE_DEVS16=$(DD)bbox.dev
-
-#DEVICE_DEVS17=
-#DEVICE_DEVS18=
-#DEVICE_DEVS19=
-#DEVICE_DEVS20=$(DD)cljet5.dev $(DD)cljet5c.dev
-#DEVICE_DEVS21=$(DD)spotcmyk.dev $(DD)devicen.dev $(DD)xcf.dev $(DD)psdcmyk.dev $(DD)psdrgb.dev $(DD)psdcmykog.dev $(DD)fpng.dev
-DEVICE_DEVS=$(DISPLAY_DEV) 
-DEVICE_DEVS1=$(DD)bit.dev $(DD)bitcmyk.dev $(DD)bitrgb.dev $(DD)bitrgbtags.dev $(DD)bmp16.dev $(DD)bmp16m.dev $(DD)bmp256.dev $(DD)bmp32b.dev $(DD)bmpgray.dev $(DD)bmpmono.dev $(DD)bmpsep1.dev $(DD)bmpsep8.dev $(DD)ccr.dev $(DD)cfax.dev $(DD)cif.dev $(DD)devicen.dev $(DD)dfaxhigh.dev $(DD)dfaxlow.dev $(DD)eps2write.dev $(DD)epswrite.dev $(DD)fax.dev $(DD)faxg3.dev $(DD)faxg32d.dev $(DD)faxg4.dev $(DD)fpng.dev $(DD)inferno.dev $(DD)ink_cov.dev $(DD)inkcov.dev $(DD)jpeg.dev $(DD)jpegcmyk.dev $(DD)jpeggray.dev $(DD)mgr4.dev $(DD)mgr8.dev $(DD)mgrgray2.dev $(DD)mgrgray4.dev $(DD)mgrgray8.dev $(DD)mgrmono.dev $(DD)miff24.dev $(DD)pam.dev $(DD)pamcmyk32.dev $(DD)pamcmyk4.dev $(DD)pbm.dev $(DD)pbmraw.dev $(DD)pcx16.dev $(DD)pcx24b.dev $(DD)pcx256.dev $(DD)pcx2up.dev $(DD)pcxcmyk.dev $(DD)pcxgray.dev $(DD)pcxmono.dev $(DD)pdfwrite.dev $(DD)pgm.dev $(DD)pgmraw.dev $(DD)pgnm.dev $(DD)pgnmraw.dev $(DD)pkm.dev $(DD)pkmraw.dev $(DD)pksm.dev $(DD)pksmraw.dev $(DD)plan.dev $(DD)plan9bm.dev $(DD)planc.dev $(DD)plang.dev $(DD)plank.dev $(DD)planm.dev $(DD)pnm.dev $(DD)pnmraw.dev $(DD)ppm.dev $(DD)ppmraw.dev $(DD)ps2write.dev $(DD)psdcmyk.dev $(DD)psdcmykog.dev $(DD)psdf.dev $(DD)psdrgb.dev $(DD)sgirgb.dev $(DD)spotcmyk.dev $(DD)sunhmono.dev $(DD)tfax.dev $(DD)tiff12nc.dev $(DD)tiff24nc.dev $(DD)tiff32nc.dev $(DD)tiff48nc.dev $(DD)tiff64nc.dev $(DD)tiffcrle.dev $(DD)tiffg3.dev $(DD)tiffg32d.dev $(DD)tiffg4.dev $(DD)tiffgray.dev $(DD)tifflzw.dev $(DD)tiffpack.dev $(DD)tiffs.dev $(DD)tiffscaled.dev $(DD)tiffsep.dev $(DD)tiffsep1.dev $(DD)txtwrite.dev $(DD)xcf.dev $(DD)xpswrite.dev 
-DEVICE_DEVS2=$(DD)ap3250.dev $(DD)appledmp.dev $(DD)atx23.dev $(DD)atx24.dev $(DD)atx38.dev $(DD)bj10e.dev $(DD)bj200.dev $(DD)bjc600.dev $(DD)bjc800.dev $(DD)cdeskjet.dev $(DD)cdj500.dev $(DD)cdj550.dev $(DD)cdjcolor.dev $(DD)cdjmono.dev $(DD)cljet5.dev $(DD)cljet5c.dev $(DD)cljet5pr.dev $(DD)coslw2p.dev $(DD)coslwxl.dev $(DD)cp50.dev $(DD)declj250.dev $(DD)deskjet.dev $(DD)dj505j.dev $(DD)djet500.dev $(DD)djet500c.dev $(DD)dnj650c.dev $(DD)eps9high.dev $(DD)eps9mid.dev $(DD)epson.dev $(DD)epsonc.dev $(DD)escp.dev $(DD)fs600.dev $(DD)hl7x0.dev $(DD)ibmpro.dev $(DD)imagen.dev $(DD)iwhi.dev $(DD)iwlo.dev $(DD)iwlq.dev $(DD)jetp3852.dev $(DD)laserjet.dev $(DD)lbp8.dev $(DD)lips3.dev $(DD)lj250.dev $(DD)lj3100sw.dev $(DD)lj4dith.dev $(DD)lj4dithp.dev $(DD)lj5gray.dev $(DD)lj5mono.dev $(DD)ljet2p.dev $(DD)ljet3.dev $(DD)ljet3d.dev $(DD)ljet4.dev $(DD)ljet4d.dev $(DD)ljet4pjl.dev $(DD)ljetplus.dev $(DD)lp2563.dev $(DD)lp8000.dev $(DD)lq850.dev $(DD)lxm5700m.dev $(DD)m8510.dev $(DD)necp6.dev $(DD)oce9050.dev $(DD)oki182.dev $(DD)okiibm.dev $(DD)paintjet.dev $(DD)photoex.dev $(DD)picty180.dev $(DD)pj.dev $(DD)pjetxl.dev $(DD)pjxl.dev $(DD)pjxl300.dev $(DD)pxlcolor.dev $(DD)pxlmono.dev $(DD)r4081.dev $(DD)rinkj.dev $(DD)sj48.dev $(DD)st800.dev $(DD)stcolor.dev $(DD)t4693d2.dev $(DD)t4693d4.dev $(DD)t4693d8.dev $(DD)tek4696.dev $(DD)uniprint.dev 
-DEVICE_DEVS3=
-DEVICE_DEVS4=
-DEVICE_DEVS5=
-DEVICE_DEVS6=$(DD)png16.dev $(DD)png16m.dev $(DD)png256.dev $(DD)png48.dev $(DD)pngalpha.dev $(DD)pnggray.dev $(DD)pngmono.dev 
-DEVICE_DEVS7=
-DEVICE_DEVS8=
-DEVICE_DEVS9=
-DEVICE_DEVS10=
-DEVICE_DEVS11=
-DEVICE_DEVS12=
-DEVICE_DEVS13=
-DEVICE_DEVS14=
-DEVICE_DEVS15=
-DEVICE_DEVS16=
-DEVICE_DEVS17=
-DEVICE_DEVS18=
-DEVICE_DEVS19=
-DEVICE_DEVS20=
-DEVICE_DEVS21=
-
-
-# Shared library target to build.
-GS_SHARED_OBJS=
-
-# ---------------------------- End of options --------------------------- #
-
-# Define the name of the partial makefile that specifies options --
-# used in dependencies.
-
-MAKEFILE=Makefile
-TOP_MAKEFILES=$(MAKEFILE) $(GLSRCDIR)/unixhead.mak
-
-# Define the auxiliary program dependency. We don't use this.
-
-AK=
-
-# Define the compilation rules and flags.
-
-CCFLAGS=$(GENOPT) $(CAPOPT) $(CFLAGS)
-CC_=$(CC) $(CCFLAGS)
-CCAUX_=$(CCAUX) $(CFLAGS)
-CC_LEAF=$(CC_)
-# note gcc can't use -fomit-frame-pointer with -pg.
-CC_LEAF_PG=$(CC_)
-# These are the specific warnings we have to turn off to compile those
-# specific few files that need this.  We may turn off others in the future.
-CC_NO_WARN=$(CC_)
-CCAUX_NO_WARN=$(CCAUX_)
-CC_SHARED=$(CC_) 
-
-LD_SET_DT_SONAME=-soname=
-
-# MAKEDIRS = the dependency on ALL object files (must be the last one on
-# the line. Requires GNU make to make it an 'order only' dependency
-# MAKEDIRSTOP = the topmost dependency - set this if you can't set MAKEDIRS
-
-MAKEDIRS=| directories
-MAKEDIRSTOP=
-
-# ---------------- End of platform-specific section ---------------- #
-
-INSTALL_CONTRIB=
-include $(GLSRCDIR)/unixhead.mak
-include $(GLSRCDIR)/gs.mak
-include $(GLSRCDIR)/trio.mak
-# psromfs.mak must precede lib.mak
-include $(PSSRCDIR)/psromfs.mak
-include $(GLSRCDIR)/lib.mak
-include $(PSSRCDIR)/int.mak
-include $(GLSRCDIR)/freetype.mak
-include $(GLSRCDIR)/stub.mak
-include $(GLSRCDIR)/jpeg.mak
-# zlib.mak must precede png.mak
-include $(GLSRCDIR)/zlib.mak
-include $(GLSRCDIR)/png.mak
-include $(GLSRCDIR)/tiff.mak
-include $(GLSRCDIR)/jbig2.mak
-include $(GLSRCDIR)/ldf_jb2.mak
-include $(GLSRCDIR)/lwf_jp2.mak
-include $(GLSRCDIR)/openjpeg.mak
-include $(GLSRCDIR)/$(WHICH_CMS).mak
-include $(GLSRCDIR)/ijs.mak
-
-
-include $(DEVSRCDIR)/devs.mak
-include $(DEVSRCDIR)/contrib.mak
-include $(GLSRCDIR)/unix-aux.mak
-include $(GLSRCDIR)/unixlink.mak
-include $(GLSRCDIR)/unix-dll.mak
-include $(GLSRCDIR)/unix-end.mak
-include $(GLSRCDIR)/unixinst.mak
-
-
-
-# Clean up after the autotools scripts
-distclean : clean config-clean soclean pgclean debugclean mementoclean
-	-$(RM_) -r $(BINDIR) $(GLOBJDIR) $(PSOBJDIR) $(AUXDIR)
-	-$(RM_) -r autom4te.cache
-	-$(RM_) config.log config.status
-	-$(RM_) Makefile
-
-# a debug-clean target for consistency with the ghostpdl builds
-debug-clean : debugclean
-
-memento-clean : mementoclean
-
-maintainer-clean : distclean
-	-$(RM_) configure
-
-check : default
-	$(NO_OP)
-
diff -r b2492cf0b629 -r b970e2f022e2 src/ghostscript.mk
--- a/src/ghostscript.mk	Wed Jul 30 10:16:09 2014 +0200
+++ /dev/null	Thu Jan 01 00:00:00 1970 +0000
@@ -1,68 +0,0 @@
-# This file is part of MXE.
-# See index.html for further information.
-
-PKG             := ghostscript
-$(PKG)_IGNORE   :=
-$(PKG)_VERSION  := 9.14
-$(PKG)_CHECKSUM := eab1c9e9850d8aedf02d16f3f7f8198ad9384068
-$(PKG)_SUBDIR   := $(PKG)-$($(PKG)_VERSION)
-$(PKG)_FILE     := $(PKG)-$($(PKG)_VERSION).tar.bz2
-$(PKG)_URL      := http://downloads.ghostscript.com/public/$($(PKG)_FILE)
-$(PKG)_DEPS     := jpeg libpng tiff zlib
-
-ifeq ($(MXE_NATIVE_MINGW_BUILD),yes)
-    $(PKG)_DEPS += lcms
-endif
-
-define $(PKG)_UPDATE
-    echo 'Warning: Updates are temporarily disabled for package ghostscript.' >&2;
-    echo $($(PKG)_VERSION)
-endef
-
-## Currently only works for native builds and i686 mingw cross builds.
-
-ifeq ($(MXE_NATIVE_BUILD),yes)
-  define $(PKG)_BUILD
-    # in native mingw, force it to use external lcm2
-    if [ "$(MXE_SYSTEM)" == "mingw" ]; then \
-        rm -rf '$(1)/lcms2'; \
-    fi
-    cd '$(1)' && autoreconf
-    cd '$(1)' && '$(1)/configure' \
-        $(CONFIGURE_CPPFLAGS) $(CONFIGURE_LDFLAGS) \
-        $(HOST_AND_BUILD_CONFIGURE_OPTIONS) \
-        --prefix='$(HOST_PREFIX)' \
-        --with-system-libtiff \
-        && $(CONFIGURE_POST_HOOK)
-
-    if [ "$(MXE_SYSTEM)" == "mingw" ]; then \
-        $(MAKE) -C '$(1)' -j '$(JOBS)' GS_LIB_DEFAULT=""; \
-    else \
-        $(MAKE) -C '$(1)' -j '$(JOBS)'; \
-    fi
-    $(MAKE) -C '$(1)' install
-  endef
-else
-  ifeq ($(MXE_SYSTEM),mingw)
-    ifneq ($(ENABLE_64),yes)
-      ## Ghostscript configure script is not cross-compiler friendly,
-      ## so instead of running it, copying configuration files from a
-      ## native mingw build.  Some configuration is done by compiling
-      ## and running programs during the build, but those programs
-      ## probe the build system and don't know about cross compiling,
-      ## so we generate the files then replace them with files from a
-      ## mingw native build.
-      define $(PKG)_BUILD
-        cp '$(TOP_DIR)/src/ghostscript-mingw-i686-makefile' '$(1)/Makefile'
-        $(MAKE) -C '$(1)' TARGET='$(TARGET)' prefix='$(HOST_PREFIX)' obj/arch.h obj/gconfig_.h
-        cp '$(TOP_DIR)/src/ghostscript-mingw-i686-arch.h' '$(1)/obj/arch.h'
-        cp '$(TOP_DIR)/src/ghostscript-mingw-i686-arch.h' '$(1)/obj/gconfig_.h'
-        $(MAKE) -C '$(1)' -j '$(JOBS)' \
-          TARGET='$(TARGET)' prefix='$(HOST_PREFIX)' CC='$(MXE_CC)'
-        $(MAKE) -C '$(1)' \
-          TARGET='$(TARGET)' prefix='$(HOST_PREFIX)' CC='$(MXE_CC)' \
-          install
-      endef
-    endif
-  endif
-endif
diff -r b2492cf0b629 -r b970e2f022e2 src/octave.mk
--- a/src/octave.mk	Wed Jul 30 10:16:09 2014 +0200
+++ b/src/octave.mk	Thu Jul 31 12:07:23 2014 +0200
@@ -3,15 +3,15 @@
 
 PKG             := octave
 $(PKG)_IGNORE   :=
-$(PKG)_VERSION  := 3.8.2-rc2
-$(PKG)_CHECKSUM := 07b1266cd55cc79099382e858c430fdd8dcfb638
+$(PKG)_VERSION  := 4.1.0+
+$(PKG)_CHECKSUM := 29612a7c16e0bfe730f2d4a9cf3db9a1f51be092
 $(PKG)_SUBDIR   := $(PKG)-$($(PKG)_VERSION)
 $(PKG)_FILE     := octave-$($(PKG)_VERSION).tar.gz
 $(PKG)_URL      := ftp://alpha.gnu.org/gnu/octave/$($(PKG)_FILE)
 ifeq ($(USE_SYSTEM_FONTCONFIG),no)
   $(PKG)_FONTCONFIG := fontconfig
 endif
-$(PKG)_DEPS     := blas arpack curl fftw fltk $($(PKG)_FONTCONFIG) ghostscript gl2ps glpk gnuplot graphicsmagick hdf5 lapack pcre pstoedit qhull qrupdate qscintilla qt readline suitesparse texinfo zlib
+$(PKG)_DEPS     := blas arpack curl fftw fltk $($(PKG)_FONTCONFIG) gl2ps glpk gnuplot graphicsmagick hdf5 lapack pcre pstoedit qhull qrupdate qscintilla qt readline suitesparse texinfo zlib
 ifeq ($(ENABLE_JIT),yes)
   $(PKG)_DEPS += llvm
   $(PKG)_ENABLE_JIT_CONFIGURE_OPTIONS := --enable-jit
 
# HG changeset patch
# User Sergey Plotnikov <seryozha.plotnikov@gmail.com>
# Date 1406708169 -7200
#      Wed Jul 30 10:16:09 2014 +0200
# Node ID 2cb5076ae9ee9d7dc37d0513cae0099bb23260cc
# Parent  95454fa2df8b918e5109b76a1d4d44105fb854e8
iris4octave specific changes to simplify Octave installation process

diff -r 95454fa2df8b -r 2cb5076ae9ee binary-dist-rules.mk
--- a/binary-dist-rules.mk	Mon Jul 28 15:41:31 2014 -0400
+++ b/binary-dist-rules.mk	Wed Jul 30 10:16:09 2014 +0200
@@ -66,6 +66,8 @@
     cp $(TOP_DIR)/installer-files/README.html $(OCTAVE_DIST_DIR)/
     echo "  refblas..."
     cp $(OCTAVE_DIST_DIR)/bin/libblas.dll $(OCTAVE_DIST_DIR)/bin/librefblas.dll
+    echo "  octave batch files..."
+    cp $(TOP_DIR)/$(BAT_FILES) $(OCTAVE_DIST_DIR)/bin
   endef
 endif
 
diff -r 95454fa2df8b -r 2cb5076ae9ee dist-files.mk
--- a/dist-files.mk	Mon Jul 28 15:41:31 2014 -0400
+++ b/dist-files.mk	Wed Jul 30 10:16:09 2014 +0200
@@ -761,6 +761,10 @@
   octave-wrapper.in \
   octaverc
 
+BAT_FILES := \
+  octave-4.1.0+.bat \
+  octave-cli-4.1.0+.bat
+
 INSTALL_FILES_1 := \
   gpl-3.0.txt \
   octave.bmp \
diff -r 95454fa2df8b -r 2cb5076ae9ee makeinst-script.sh
--- a/makeinst-script.sh	Mon Jul 28 15:41:31 2014 -0400
+++ b/makeinst-script.sh	Wed Jul 30 10:16:09 2014 +0200
@@ -258,11 +258,11 @@
  CreateShortCut "\$SMPROGRAMS\\Octave-$VERSION\\Uninstall.lnk" "\$INSTDIR\\uninstall.exe" "" "\$INSTDIR\\uninstall.exe" 0
  SetOutPath "%USERPROFILE%"
  \${If} \$IsWin8 == 1
-   CreateShortCut "\$SMPROGRAMS\\Octave-$VERSION\\Octave (Command Line).lnk" "\$INSTDIR\\bin\\octave-cli.exe" "-i --line-editing" "\$INSTDIR\\$ICON" 0
-   CreateShortCut "\$SMPROGRAMS\\Octave-$VERSION\\Octave (Experimental GUI).lnk" "\$INSTDIR\\bin\\octave-gui.exe" "-i --line-editing" "\$INSTDIR\\$ICON" 0
+   CreateShortCut "\$SMPROGRAMS\\Octave-$VERSION\\Octave (Command Line).lnk" "\$INSTDIR\\bin\\octave-cli-4.1.0+.bat" "-i --line-editing" "\$INSTDIR\\share\\octave\\4.1.0+\\imagelib\\octave-logo.ico" 0
+   CreateShortCut "\$SMPROGRAMS\\Octave-$VERSION\\Octave (GUI).lnk" "\$INSTDIR\\bin\\octave-4.1.0+.bat" "-i --line-editing --force-gui" "\$INSTDIR\\share\\octave\\4.1.0+\\imagelib\\octave-logo.ico" 0
  \${Else}
-   CreateShortCut "\$SMPROGRAMS\\Octave-$VERSION\\Octave (Command Line).lnk" "\$INSTDIR\\bin\\octave-cli.exe" "" "\$INSTDIR\\$ICON" 0
-   CreateShortCut "\$SMPROGRAMS\\Octave-$VERSION\\Octave (Experimental GUI).lnk" "\$INSTDIR\\bin\\octave-gui.exe" "" "\$INSTDIR\\$ICON" 0
+   CreateShortCut "\$SMPROGRAMS\\Octave-$VERSION\\Octave (Command Line).lnk" "\$INSTDIR\\bin\\octave-cli-4.1.0+.bat" "" "\$INSTDIR\\share\\octave\\4.1.0+\\imagelib\\octave-logo.ico" 0
+   CreateShortCut "\$SMPROGRAMS\\Octave-$VERSION\\Octave (Experimental GUI).lnk" "\$INSTDIR\\bin\\octave-4.1.0+.bat" "" "\$INSTDIR\\share\\octave\\4.1.0+\\imagelib\\octave-logo.ico" 0
  \${EndIf}
  SetOutPath "\$INSTDIR"
 EOF
@@ -282,11 +282,9 @@
   \${If} \$InstallShortcuts == \${BST_CHECKED}
     SetOutPath "%USERPROFILE%"
     \${If} \$IsWin8 == 1
-       CreateShortCut "\$desktop\\Octave-$VERSION (Command Line).lnk" "\$INSTDIR\\bin\\octave-cli.exe" "-i --line-editing" "\$INSTDIR\\$ICON" 0
-       CreateShortCut "\$desktop\\Octave-$VERSION (Experimental GUI).lnk" "\$INSTDIR\\bin\\octave-gui.exe" "-i --line-editing" "\$INSTDIR\\$ICON" 0
+      CreateShortCut "\$desktop\\Octave-$VERSION.lnk" "\$INSTDIR\\bin\\octave-4.1.0+.bat" "-i --line-editing --force-gui" "\$INSTDIR\\share\octave\4.1.0+\imagelib\octave-logo.ico" 0
     \${Else}
-       CreateShortCut "\$desktop\\Octave-$VERSION (Command Line).lnk" "\$INSTDIR\\bin\\octave-cli.exe" "" "\$INSTDIR\\$ICON" 0
-       CreateShortCut "\$desktop\\Octave-$VERSION (Experimental GUI).lnk" "\$INSTDIR\\bin\\octave-gui.exe" "" "\$INSTDIR\\$ICON" 0
+       CreateShortCut "\$desktop\\Octave-$VERSION.lnk" "\$INSTDIR\\bin\\octave-4.1.0+.bat" "" "\$INSTDIR\\share\octave\4.1.0+\imagelib\octave-logo.ico" 0
     \${EndIf}
   \${Endif}
 
diff -r 95454fa2df8b -r 2cb5076ae9ee octave-4.1.0+.bat
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/octave-4.1.0+.bat	Wed Jul 30 10:16:09 2014 +0200
@@ -0,0 +1,21 @@
+@echo off
+Rem   Find Octave's install directory through cmd32.exe variables.
+Rem   This trick finds the location where the batch file resides.
+Rem   Note: the result ends with a backslash
+set OCT_HOME=%~dp0
+
+Rem Find the path to MIKTEX bin folder
+for /f "delims=" %%a in ('findtexmf --file-type=exe latex') do @set tmpvar=%%a
+set LATEX_PATH=%tmpvar:~0,-9%
+
+Rem   Set up PATH. Make sure the Octave-version-specific subdir
+Rem   comes first. Use system environment variables for the
+Rem   Windows system dirs.
+set  PATH=%OCT_HOME%;%windir%\system32;%windir%;%windir%\system32\wbem;%LATEX_PATH%
+
+Rem  Start Octave (this detaches octave-gui and immediately
+Rem   returns):
+start octave-gui.exe %1 %2 %3
+
+Rem   Close the batch file's cmd32.exe window
+exit
diff -r 95454fa2df8b -r 2cb5076ae9ee octave-cli-4.1.0+.bat
--- /dev/null	Thu Jan 01 00:00:00 1970 +0000
+++ b/octave-cli-4.1.0+.bat	Wed Jul 30 10:16:09 2014 +0200
@@ -0,0 +1,21 @@
+@echo off
+Rem   Find Octave's install directory through cmd32.exe variables.
+Rem   This trick finds the location where the batch file resides.
+Rem   Note: the result ends with a backslash
+set OCT_HOME=%~dp0
+
+Rem Find the path to MIKTEX bin folder
+for /f "delims=" %%a in ('findtexmf --file-type=exe latex') do @set tmpvar=%%a
+set LATEX_PATH=%tmpvar:~0,-9%
+
+Rem   Set up PATH. Make sure the Octave-version-specific subdir
+Rem   comes first. Use system environment variables for the
+Rem   Windows system dirs.
+set  PATH=%OCT_HOME%;%windir%\system32;%windir%;%windir%\system32\wbem;%LATEX_PATH%
+
+Rem  Start Octave (this detaches octave-gui and immediately
+Rem   returns):
+start octave-cli.exe %1 %2
+
+Rem   Close the batch file's cmd32.exe window
+exit

