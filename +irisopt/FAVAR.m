function def = FAVAR()
% FAVAR   [Not a public function] Default options for FAVAR class functions.

%**************************************************************************

def = struct();

def.estimate = { ...
    'cross',true, ...
    @(x) is.logicalscalar(x) || (is.numericscalar(x) && x >=0 && x <= 1), ...
    'method','auto',@(x) isequal(x,'auto') || isequal(x,1) || isequal(x,2), ...
    'order',1,@(x) is.numericscalar(x), ...
    'output','auto',@(x) ischar(x) && any(strcmpi(x,{'auto','dbase','tseries','array'})), ...
    'rank',Inf,@(x) is.numericscalar(x), ...
    'tolerance','auto',@(x) strcmpi(x,'auto') || is.numericscalar(x), ...
    'ynames,yname',@(n) ['y',sprintf('%g',n)],@(x) iscellstr(x) || is.func(x), ...
    };

def.filter = { ...
    'cross',true, ...
    @(x) is.logicalscalar(x) || (is.numericscalar(x) && x >=0 && x <= 1), ...
    'invfunc','auto',@(x) isequal(x,'auto') || is.func(x), ...
    'meanonly',false,@(isArg)is.logicalscalar(isArg), ...
    'output','auto',@(x) ischar(x) && any(strcmpi(x,{'auto','dbase','tseries','array'})), ...
    'persist',false,@(isArg)is.logicalscalar(isArg), ...
    'tolerance',0,@(x) is.numericscalar(x), ...
    };

def.forecast = { ...
    'cross',true, ...
    @(x) is.logicalscalar(x) || (is.numericscalar(x) && x >=0 && x <= 1), ...
    'invfunc','auto',@(x) isequal(x,'auto') || is.func(x), ...
    'meanonly',false,@(isArg)is.logicalscalar(isArg), ...
    'output','auto',@(x) ischar(x) && any(strcmpi(x,{'auto','dbase','tseries','array'})), ...
    'persist',false,@(isArg)is.logicalscalar(isArg), ...
    'tolerance',0,@(x) is.numericscalar(x), ...
    };

end